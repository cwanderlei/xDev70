/*
 * Clipper function list, by Vailton Renato
 * 25/5/2007 00:14:11
 */
AAdd(<aTarget>, <expValue>) -> Value
Abs(<nExp>) -> nPositive
AChoice(<nTop>, <nLeft>, <nBottom>, <nRight>, <acMenuItems>, [<alSelectableItems> | <lSelectableItems>], [<cUserFunction>], [<nInitialItem>], [<nWindowRow>]) -> nPosition
AClone(<aSource>) -> aDuplicate
ACopy(<aSource>, <aTarget>, [<nStart>], [<nCount>], [<nTagetPos>]) -> aTarget
ADel(<aTarget>, <nPosition>) -> aTarget
ADir([<cFileSpec>], [<aFilenames>], [<aSizes>], [<aDates>], [<aTimes>], [<aAttributes>]) -> nFiles
AEval(<aArray>, <bBlock>, [<nStart>], [<nCount>]) -> aArray
AFields([<aFieldsnames>], [<aTypes>], [<aWidths>], [<aDecimals>]) -> nFields
AFill(<aTarget>, <expValue>, [<nStart>], [<nCounts>]) -> aTarget
AIns(<aTarget>, <nPosition>) -> aTarget
Alert(<cMessage>, [<aOptions>], [<cColor>]) -> nChoice
Alias([<nWorkarea>]) -> cAlias
AllTrim(<cString>) -> cTrimString
AltD([<nAction>]) -> Nil
Array(<nElements> [, <nElements>...]) -> aArray
Asc(<cExp>) -> nCode
AScan(<aTargets>, <expSearch>, [<nStart>], [<nCount>]) -> nStoppedAt
ASize(<aTarget>, <nLength>) -> aTarget
ASort(<aTarget>, [<nStart>], [<nCount>], [<bOrder>]) -> aTarget
At(<cSearch>, <cTarget>) -> nPosition
ATail(<aArray>) -> Element
Bin2I(<cSignedInt>) -> nNumber
Bin2L(<cSignedInt>) -> nNumber
Bin2W(<cUnsignedInt>) -> nNumber
Bof() -> lBoundary
Break(<cExpr>) -> Nil
Browse([<nTop>], [<nLeft>], [<nBottom>], [<nRight>]) -> lSuccess
CDoW(<dExpr>) -> cDayName
Chr(<nCode>) -> cChar
CMonth(<dDate>) -> cMonth
Col() -> nCol
ColorSelect(<nColorIndex>) -> Nil
CToD(<cDate>) -> dDate
CurDir([<cDrivespec>]) -> cDirectory
Date() -> dSystem
Day(<dDate>) -> nDay
DBAppend() -> Nil
DBClearFilter() -> Nil
DBClearIndex() -> Nil
DBClearRelation() -> Nil
DBCloseAll() -> Nil
DBCloseArea() -> Nil
DBCommit() -> Nil
DBCommitAll() -> Nil
DBCreate(<cDatabase>, <aStruct>, [<cDriver>]) -> Nil
DBCreateIndex(<cIndexName>, <cKeyExpr>, <bKeyExpr>, [<lUnique>]) -> Nil
DBDelete() -> Nil
DBEdit([<nTop>], [<nLeft>], [<nBottom>], [<nRight>], [<acColumns>], [<cUserFunction>], [<acColumnSayPictures> | <cColumnSayPicture>], [<acColumnHeaders> | <cColumnHeader>], [<acHeadingSeparators> | <cHeadingSeparator>], [<acColumnSeparators> | <cColumnSeparator>], [<acFootingSeparators> | <cFootingSeperator>], [<acColumnFootings> | <cColumnFooting>]) -> Nil
DBEval(<bBlock>, [<bForCondition>], [<bWhileCondition>], [<nNextRecords>], [<nRecord>], [<lRest>]) -> Nil
Dbf() -> cAlias
DBFilter() -> cFilter
DBGoBottom() -> Nil
DBGoTo(<nRecordNumber>) -> Nil
DBGoTop() -> Nil
DBRecall() -> Nil
DBReindex() -> Nil
DBRelation(<nRelation>) -> cLinkExp
DBRSelect(<nRelation>) -> nWorkArea
DBSeek(<expKey>, [<lSoftSeek>]) -> lFound
DBSelectArea(<nArea> | <cAlias>) -> Nil
DBSetDriver([<cDriver>]) -> cCurrentDriver
DBSetFilter(<bCondition>, [<cCondition>]) -> Nil
DBSetIndex(<cIndexName>) -> Nil
DBSetOrder(<nOrdernum>) -> Nil
DBSetRelation(<nArea> | <cAlias>, <bExpr>, [<cExpr>]) -> Nil
DBSkip(<nRecords>) -> Nil
DBStruct() -> aStruct
DBUnlock() -> Nil
DBUnlockAll() -> Nil
DBUseArea([<lNewArea>], [<cDriver>], <cName>, [<xcAlias>], [<lShared>], [<lReadOnly>]) -> Nil
Deleted() -> lDeleted
Descend(<exp>) -> ValueInverted
DevOut(<exp>, [<cColorString>]) -> Nil
DevOutPict(<exp>, <cPicture>, [<cColorString>]) -> Nil
DevPos(<nRow>, <nCol>) -> Nil
Directory(<cDirSpec>, [<cAttributes>]) -> aDirectory
DiskSpace(<nDrives>) -> nBytes
DispBegin() -> Nil
DispBox(<nTop>, <nLeft>, <nBottom>, <nRight>, [<cnBoxString>], [<cColorString>]) -> Nil
DispCount() -> nDispCount
DispEnd() -> Nil
DispOut(<exp>, [<cColorString>]) -> Nil
DOSError([<nNewOsCode>]) -> nOsCode
DoW(<dDate>) -> nDay
DToC(<dDate>) -> cDate
DToS(<dDate>) -> cDate
Empty(<exp>) -> lEmpty
Eof() -> lBoundary
ErrorBlock([<bErrorHandler>]) -> bCurrentErrorHandler
ErrorLevel([<nNewReturnCode>]) -> nCurrentReturnCode
Eval(<bBlock>, [<BlockArg list>]) -> LastBlockValue
Exp(<nExponent>) -> nAntilogarithm
FClose(<nHandle>) -> lError
FCount() -> nFields
FCreate(<cFile, [<nAttibute>]) -> nHandle
FErase(<cFile>) -> nSuccess
FError() -> nErrorCode
Field(<nPosition>) -> cFieldName
FieldBlock(<cFieldName>) -> bFieldBlock
FieldGet(<nField>) -> ValueField
FieldName(<nPosition>) -> cFieldName
FieldPos(<cFieldName>) ->nFieldPos
FieldPut(<nField>, <expAssign>) ->ValueAssigned
FieldWBlock(<cFieldName>, <nWorkArea>) -> bFieldWBlock
File(<cFileSpec>) -> lExist
FKLabel(<nFunctionKey>) -> cKeyLabel
FKMax() -> nFunctionKey
FLock() -> lSuccess
FOpen(<cFile>, [<nMode>]) -> nHandle
Found() -> lSuccess
FRead(<nHandle>, @<cBufferVar>, <nBytes>) -> nBytes
FReadStr(<nHandle>, <nBytes>) -> cString
FRename(<cOldFile>, <cNewFile>) -> nSuccess
FSeek(<nHandle>, <nOffset>, [<nOrigin>]) -> nPosition
FWrite(<nHandle>, <cBuffer>, [<nBytes>]) -> nBytesWritten
GetEnv(<cEnvironmentVariable>) -> cString
HardCR(<cString>) -> cConvertedString
Header() -> nBytes
I2Bin(<nInteger>) -> cBinaryInteger
IIf(<lCondition>, <expTrue>, <expFalse>) -> Value
IndexExt() -> cExtension
IndexKey(nOrder) -> cKeyExp
IndexOrd() -> nOrder
Inkey([<nSeconds>]) -> nInkeyCode
Int(<nExp>) -> nInteger
IsAlpha(<cString>) -> lBoolean
IsColor() -> lBoolean
IsColour() -> lBoolean
IsDigit(<cString>) -> lBoolean
IsLower(<cString>) -> lBoolean
IsPrinter() -> lReady
IsUpper(<cString>) -> lBoolean
L2Bin(<nExp> -> cBinaryInteger
LastKey() -> nInkeyCode
LastRec() -> nRecords
Left(<cString>, <nCount>) -> cSubString
Len(<cString> | <aTarget>) -> nCount
Log(<nExp>) -> nNaturalLog
Lower(<cString>) -> cLowerString
LTrim(<cString>) -> cTrimString
LUpdate() -> dModification
Max(<xExp1>, <xExp2>) -> xLarger
MaxCol() -> nColumn
MaxRow() -> nRow
MemoEdit(<cString>, [<nTop>], [<nLeft>], [<nBottom>], [<nRight>], [<lEditMode>], [<cUserFunction>], [<nLineLength>], [<nTabSize>], [<TextBufferRow>], [<nTextBufferColumn>], [<nWindowRow>], [<nWindowColumn>]) -> cTextBuffer
MemoLine(<cString>, [<nLineLength>], [<nLineNumber>], [<nTabSize>], [<lWrap>]) -> cLine
MemoRead(<cFile>) -> cString
Memory(<nExp>) -> nKBytes
MemoTran(<cString>, [<cReplaceHardCR>], [<cReplaceSoftCR>]) -> cNewString
MemoWrit(<cFile>, <cString>) -> lSuccess
MemvarBlock(<cMemvarName>) -> bMemvarBlock
Min(<xExp1>, <xExp2>) -> xSmaller
MLCount(<cString>, [<nLineLength>], [<nTabSize>], [<lWrap>]) -> nLines
MLCToPos(<cText>, <nWidth>, <nLine>, <nCol>, [<nTabSize>], [<lWrap>]) -> nPosition
MLPos(<cString>, <nLineLenght>, <nLine>, [<nTabSize>], [<lWrap>]) -> nPosition
Mod(<nDivident>, <nDivisior>) -> nRemainder
Month(<dDate>) -> nMonth
MPosToLC(<cText>, <nWidth>, <nPos>, [<nTabSize>], [<lWrap>]) -> aLineColumn
NetErr(<lNewError>) -> lError
NetName() -> cWorkstationName
NextKey() -> nInkeyCode
NoSnow(<lToggle>) -> Nil
OS() -> cOSName
OutErr(<exp list>) -> Nil
OutStd(<exp list>) -> Nil
Pad(<exp>, <nLength>, [<cFillChar>]) -> cPaddedString
PadC(<exp>, <nLength>, [<cFillChar>]) -> cPaddedString
PadL(<exp>, <nLength>, [<cFillChar>]) -> cPaddedString
PadR(<exp>, <nLength>, [<cFillChar>]) -> cPaddedString
PCol() -> nColumn
PCount() -> nLastArgumentPos
ProcLine(<nActivation>) -> nSourceLine
ProcName(<nActivation>) -> cProcedureName
PRow() -> nRow
QOut(<exp list>) -> Nil
QQOut(<exp list>) -> Nil
RAt(<cSearch>, <cTarget>) -> nPosition
ReadExit(<lToggle>) -> lCurrentState
ReadInsert(<lToggle>) ->lCurrentMode
ReadKey() -> nReadkeyCode
ReadModal(<aGetList>) -> Nil
ReadVar() -> cVarName
RecCount() -> nRecords
RecNo() -> nRecord
RecSize() -> nBytes
Replicate(<cString>, <nCount>) -> cRepeatedString
RestScreen([<nTop>], [<nLeft>], [<nBottom>], [<nRight>], <cScreen>) -> Nil
Right(<cString>, <nCount>) -> cSubString
RLock() -> lSuccess
Round(<nNumber>, <nDecimals>) -> nRounded
Row() -> nRow
RTrim(<cString>) -> cTrimString
SaveScreen([<nTop>], [<nLeft>], [<nBottom>], [<nRight>]) -> cScreen
Scroll([<nTop>], [<nLeft>], [<nBottom>], [<nRight>], [<nVert>], [<nHoriz>]) -> Nil
Seconds() -> nSeconds
Select([<cAlias>]) -> nWorkArea
Set(<nSpecifier>, [<expNewSetting>], [<lOpenMode>]) -> lCurrentSetting
SetBlink([<lToggle>]) -> lCurrentSetting
SetCancel([<lToggle>]) -> lCurrentSetting
SetColor([<cColorString>]) -> cColorString
SetCursor([<nCursorShape>]) -> nCurrentSetting
SetKey(<nInkeyCode>, [<bAction>]) -> bCurrentAction
SetMode(<nRows>, <nCols>) -> lSuccess
SetPos(<nRow>, <nCol>) -> Nil
SetPrc(<nRow>, <nCol>) -> Nil
SoundEx(<cString>) -> cSoundExString
Space(<nCount>) -> cSpaces
Sqrt(<nNumber>) -> nRoot
Str(<nNumber>, [<nLength>], [<nDecimals>]) -> cNumber
StrTran(<cString>, <cSearch>, [<cReplace>], [<nStart>], [<nCount>]) -> cNewString
Stuff(<cString>, <nStart>, <nDelete>, <cInsert>) -> cNewString
SubStr(<cString>, <nStart>, [<nCount>]) -> cSubstring
Time() -> cTimeString
Tone(<nFrequency>, <nDuration>) -> Nil
Transform(<exp>, <cSayPicture>) -> cFormatString
Trim(<cString>) -> cTrimString
Type(<cExp>) -> cType
Updated() -> lChange
Upper(<cString>) -> cUpperString
Used() -> lDfbOpen
Val(<cNumber>) -> nNumber
ValType(<exp>) -> cType
Version() -> cVersion
Word(<nNumber>) -> Nil
Year(<dDate>) -> nYear
